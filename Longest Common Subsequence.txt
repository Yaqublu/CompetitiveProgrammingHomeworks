Longest Common Subsequence

This problem can be solved with Dynamic programming using recursion and memorization. We will take matrix and for 2 strings str1 and st2 with length n and m respectively:

1. for(i=0 to n) LCS[i][0];
2. for(i=0 to m) LCS[0][j];

	        LCS[i-1][j-1]+1	, if str[i-1]==str[j-1]
3. LCS[i][j] =	LCS[i][j-1]	, if LCS[i][j-1]>LCS[i-1][j]
		LCS[i-1][j]	, if LCS[i][j-1]<LCS[i-1][j]

LCS[n][m] will be our result.

The algorithm takes O(n*m) memory and to build our matrix O(n*m). O(1) to report our result.